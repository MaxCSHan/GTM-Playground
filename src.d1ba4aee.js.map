{"version":3,"sources":["src/index.js"],"names":["getUserPseudoId","gaCookie","document","cookie","split","find","trim","startsWith","slice","join","getMeasurementIds","gtmObject","parsedObject","GTMIds","GAIds","key","push","detectTags","getDetecter","querySelector","detecterBlock","createElement","measurementIds","window","google_tag_manager","getGTMBlock","GTMBlock","getGABlock","GABlock","length","innerHTML","concat","map","id","setAttribute","append","userPseudoId","getUserBlock","userIdBlock","copyToClipboard","classname","codeSnippet","range","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","alert","getAttribute","addEventListener"],"mappings":";AAAA,SAASA,IAEP,IAAIC,EAAWC,SAASC,OACrBC,MAAM,KACNC,KAAK,SAACF,GAAM,OAAKA,EAAOG,OAAOC,WAAW,UAE7C,OAAIN,EAEiBA,EAASG,MAAM,KAAKI,OAAO,GAAGC,KAAK,KAM/C,KAIX,SAASC,EAAkBC,GACzB,IAAMC,EAAeD,EACfE,EAAS,GACTC,EAAQ,GAEd,IAAK,IAAMC,KAAOH,EAIZG,EAAIR,WAAW,SACjBM,EAAOG,KAAKD,GAGVA,EAAIR,WAAW,OACjBO,EAAME,KAAKD,GAIf,MAAO,CAAEF,OAAAA,EAAQC,MAAAA,GAGnB,IAAMG,EAAa,WACjB,IAAMC,EAAchB,SAASiB,cAAc,mBACrCC,EAAgBF,GAElBhB,SAASmB,cAAc,OACrBC,EAAiBZ,EAAkBa,OAAOC,oBAC1CC,EAAcvB,SAASiB,cAAc,kBACrCO,EAAWD,GAA4BvB,SAASmB,cAAc,OAC9DM,EAAazB,SAASiB,cAAc,iBACpCS,EAAUD,GAA0BzB,SAASmB,cAAc,OAC7DC,MAAAA,GAAAA,EAAgBT,QAAUS,EAAeT,OAAOgB,OAAS,EAC3DH,EAASI,UAASC,qCAAAA,OAAwCT,EAAeT,OAAOmB,IAC9E,SAACC,GAAE,MAAAF,iCAAAA,OAAsCE,EAAE,aAG7CP,EAASI,UAAY,wCAGnBR,MAAAA,GAAAA,EAAgBR,OAASQ,EAAeR,MAAMe,OAAS,EACzDD,EAAQE,UAASC,oCAAAA,OAAuCT,EAAeR,MAAMkB,IAC3E,SAACC,GAAE,MAAAF,gCAAAA,OAAqCE,EAAE,aAG5CL,EAAQE,UAAY,wCAGjBL,IACHC,EAASQ,aAAa,QAAS,uBAC/Bd,EAAce,OAAOT,IAElBC,IACHC,EAAQM,aAAa,QAAS,sBAC9Bd,EAAce,OAAOP,IAGvB,IAAMQ,EAAepC,IACfqC,EAAenC,SAASiB,cAAc,eAEtCmB,EAAcD,GAEhBnC,SAASmB,cAAc,OAGzBiB,EAAYR,UADVM,EACmBL,sCAAAA,OAAyCK,EAAqB,WAEL,uDAE3EC,IACHC,EAAYJ,aAAa,QAAS,oBAClCd,EAAce,OAAOG,IAGlBpB,IACHE,EAAcc,aAAa,QAAS,kBACpChC,SAASiB,cAAc,QAAQgB,OAAOf,KAQ1C,SAASmB,EAAgBC,GACvB,IAAMC,EAAcvC,SAASiB,cAAaY,GAAAA,OAAIS,EAAgB,UACxDE,EAAQxC,SAASyC,cACvBD,EAAME,WAAWH,GACjBlB,OAAOsB,eAAeC,kBACtBvB,OAAOsB,eAAeE,SAASL,GAC/BxC,SAAS8C,YAAY,QACrBzB,OAAOsB,eAAeC,kBAGtBG,MAAKlB,iBAAAA,OACcU,EAAYS,aAC3B,eAEJ,4BAlBFhD,SACGiB,cAAc,eACdgC,iBAAiB,QAAS,WAAA,OAAMlC,MAmBnCf,SACGiB,cAAc,2BACdgC,iBAAiB,QAAS,WAAA,OAAMZ,EAAgB,mBACnDrC,SACGiB,cAAc,yBACdgC,iBAAiB,QAAS,WAAA,OAAMZ,EAAgB","file":"src.d1ba4aee.js","sourceRoot":"..","sourcesContent":["function getUserPseudoId() {\n  // Read the \"_ga\" cookie\n  var gaCookie = document.cookie\n    .split(\";\")\n    .find((cookie) => cookie.trim().startsWith(\"_ga=\"));\n\n  if (gaCookie) {\n    // Extract the user_pseudo_id from the \"_ga\" cookie\n    var userPseudoId = gaCookie.split(\".\").slice(-2).join(\".\");\n\n    // Return the user_pseudo_id\n    return userPseudoId;\n  } else {\n    // Return null if the \"_ga\" cookie is not found\n    return null;\n  }\n}\n\nfunction getMeasurementIds(gtmObject) {\n  const parsedObject = gtmObject;\n  const GTMIds = [];\n  const GAIds = [];\n\n  for (const key in parsedObject) {\n    // const value = parsedObject[key];\n\n    // Check if the key is a GTM measurement ID (starts with 'GTM-')\n    if (key.startsWith(\"GTM-\")) {\n      GTMIds.push(key);\n    }\n\n    if (key.startsWith(\"G-\")) {\n      GAIds.push(key);\n    }\n  }\n\n  return { GTMIds, GAIds };\n}\n\nconst detectTags = () => {\n  const getDetecter = document.querySelector(\".detecter-block\");\n  const detecterBlock = getDetecter\n    ? getDetecter\n    : document.createElement(\"div\");\n  const measurementIds = getMeasurementIds(window.google_tag_manager);\n  const getGTMBlock = document.querySelector(\".gtm-container\");\n  const GTMBlock = getGTMBlock ? getGTMBlock : document.createElement(\"div\");\n  const getGABlock = document.querySelector(\".ga-container\");\n  const GABlock = getGABlock ? getGABlock : document.createElement(\"div\");\n  if (measurementIds?.GTMIds && measurementIds.GTMIds.length > 0) {\n    GTMBlock.innerHTML = `GTM is detected on this website.  ${measurementIds.GTMIds.map(\n      (id) => `<div class=\"id-tag gtm-block\">${id}</div>`\n    )}`;\n  } else {\n    GTMBlock.innerHTML = \"GTM is not detected on this website. \";\n  }\n\n  if (measurementIds?.GAIds && measurementIds.GAIds.length > 0) {\n    GABlock.innerHTML = `GA is detected on this website.  ${measurementIds.GAIds.map(\n      (id) => `<div class=\"id-tag ga-block\">${id}</div>`\n    )}`;\n  } else {\n    GABlock.innerHTML = \"GA4 is not detected on this website. \";\n  }\n\n  if (!getGTMBlock) {\n    GTMBlock.setAttribute(\"class\", \"block gtm-container\");\n    detecterBlock.append(GTMBlock);\n  }\n  if (!getGABlock) {\n    GABlock.setAttribute(\"class\", \"block ga-container\");\n    detecterBlock.append(GABlock);\n  }\n\n  const userPseudoId = getUserPseudoId();\n  const getUserBlock = document.querySelector(\".user-block\");\n\n  const userIdBlock = getUserBlock\n    ? getUserBlock\n    : document.createElement(\"div\");\n\n  if (userPseudoId) {\n    userIdBlock.innerHTML = `<span>user_pseudo_id: </span><span>${userPseudoId}</span>`;\n  } else {\n    userIdBlock.innerHTML = `<span>user_pseudo_id: </span><span>not found!</span>`;\n  }\n  if (!getUserBlock) {\n    userIdBlock.setAttribute(\"class\", \"block user-block\");\n    detecterBlock.append(userIdBlock);\n  }\n\n  if (!getDetecter) {\n    detecterBlock.setAttribute(\"class\", \"detecter-block\");\n    document.querySelector(\"#app\").append(detecterBlock);\n  }\n};\n\ndocument\n  .querySelector(\".detect-btn\")\n  .addEventListener(\"click\", () => detectTags());\n\nfunction copyToClipboard(classname) {\n  const codeSnippet = document.querySelector(`${classname} code`);\n  const range = document.createRange();\n  range.selectNode(codeSnippet);\n  window.getSelection().removeAllRanges();\n  window.getSelection().addRange(range);\n  document.execCommand(\"copy\");\n  window.getSelection().removeAllRanges();\n\n  // Optionally, you can display a message or feedback to the user\n  alert(\n    `Code snippet (${codeSnippet.getAttribute(\n      \"description\"\n    )} ) copied to clipboard!`\n  );\n}\n\ndocument\n  .querySelector(\".header-block .copy-btn\")\n  .addEventListener(\"click\", () => copyToClipboard(\".header-block\"));\ndocument\n  .querySelector(\".body-block .copy-btn\")\n  .addEventListener(\"click\", () => copyToClipboard(\".body-block\"));\n"]}